{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Desktop/projects/pin-it/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Welcome from './components/Welcome';\nimport Search from './components/Search';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Inbox from './components/Inbox';\nimport Header from './components/Header';\nimport DisplaySearch from './containers/DisplaySearch';\nimport TailorSpecs from './components/TailorSpecs';\nimport DisplayTailorSpecs from './containers/DisplayTailorSpecs';\nimport DisplayInbox from './containers/DisplayInbox';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      user_id: null,\n      token: null,\n      error: null,\n      tailors: [],\n      success: false,\n      page: 'Welcome',\n      specs: null,\n      messages: null\n    };\n    this.abortController = new AbortController();\n\n    this.newUser = info => {\n      let first_name = info.first_name;\n      let last_name = info.last_name;\n      let email = info.email;\n      let password = info.password;\n      fetch('http://localhost:3000/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name,\n          last_name,\n          email,\n          password\n        })\n      }).then(r => r.json()).then(data => console.log(\"data\", data));\n    };\n\n    this.getUser = info => {\n      let email = info.email;\n      let password = info.password;\n      return fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(r => r.json()).then(res => {\n        console.log(\"res?: \", res);\n        let token = res.token;\n        let user_id = parseInt(res.user_id);\n        localStorage.token = token;\n        localStorage.user_id = user_id;\n        fetch(\"http://localhost:3000/users/\".concat(res.user_id), {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': token\n          }\n        }).then(r => r.json()).then(user => {\n          console.log(user, \"userrrrr\");\n          localStorage.setItem('user', JSON.stringify(user));\n          this.setState({\n            user,\n            user_id,\n            token\n          });\n        });\n      });\n    };\n\n    this.logout = () => {\n      console.log(\"logged out\");\n      localStorage.token = null;\n      localStorage.user_id = null;\n      localStorage.user = null;\n      this.setState({\n        token: null,\n        user_id: '',\n        user: null,\n        error: null\n      });\n    };\n\n    this.successLogin = () => {\n      this.setState({\n        success: true\n      });\n    };\n\n    this.revertSuccess = () => {\n      this.setState({\n        success: false\n      });\n    };\n\n    this.getMessages = user => {\n      fetch('http://localhost:3000/messages').then(r => r.json()).then(messages => {\n        console.log(\"messages\", messages);\n        console.log(\"user\", user);\n        console.log(\"user_id\", this.state.user_id);\n        let user_messages = messages.filter(message => {\n          return message.receiver_id === this.state.user_id;\n        });\n        console.log(\"user messages in app\", user_messages); // return user_messages\n\n        this.setState({\n          messages: user_messages\n        });\n      });\n    };\n\n    this.sendMessage = message => {\n      console.log(\"message?\", message);\n      let sender_id = this.state.user_id;\n      let receiver_id = message.receiver_id;\n      let title = message.title;\n      let body = message.body;\n      let message_date = message.message_date;\n      fetch('http://localhost:3000/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          sender_id,\n          receiver_id,\n          title,\n          body,\n          message_date\n        })\n      }).then(r => r.json()).then(res => console.log(res, \"res\"));\n    };\n\n    this.showSpecs = tailor => {\n      this.setState({\n        specs: tailor\n      });\n    };\n\n    this.resetSpecs = () => {\n      this.setState({\n        specs: null\n      });\n    };\n  }\n\n  // Whenever app is re-rendered, we will be...\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (localStorage.token) {\n      this.setState({\n        token: localStorage.token,\n        user_id: localStorage.user_id,\n        user\n      });\n      fetch('http://localhost:3000/users').then(r => r.json()).then(data => {\n        let tailors = data.filter(d => {\n          return d.tailor === true;\n        });\n        this.setState({\n          tailors\n        });\n      });\n      this.getMessages(this.state.user);\n    }\n  } // When we want to register a new user\n\n\n  render() {\n    console.log(\"user in state?\", this.state.user);\n    return React.createElement(React.Fragment, null, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Welcome, {\n        logout: this.logout,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/search\",\n      render: xprops => React.createElement(DisplaySearch, {\n        xprops: xprops,\n        user: this.state.user,\n        tailors: this.state.tailors,\n        success: this.state.success,\n        revert: this.revertSuccess,\n        resetSpecs: this.resetSpecs,\n        specs: this.state.specs,\n        showSpecs: this.showSpecs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, {\n        getUser: this.getUser,\n        success: this.successLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: xprops => React.createElement(Signup, {\n        xprops: xprops,\n        newUser: this.newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/inbox\",\n      render: xprops => React.createElement(DisplayInbox, {\n        xprops: xprops,\n        user: this.state.user,\n        messages: this.state.messages,\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/tailor\",\n      render: xprops => React.createElement(DisplayTailorSpecs, {\n        xprops: xprops,\n        resetSpecs: this.resetSpecs,\n        specs: this.state.specs,\n        showSpecs: this.showSpecs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), this.state.success ? React.createElement(Redirect, {\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }) : null, this.state.specs ? React.createElement(Redirect, {\n      to: \"tailor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/karina/Desktop/projects/pin-it/client/src/App.js"],"names":["React","Component","withRouter","Switch","Route","Redirect","Welcome","Search","Login","Signup","Inbox","Header","DisplaySearch","TailorSpecs","DisplayTailorSpecs","DisplayInbox","App","state","user","user_id","token","error","tailors","success","page","specs","messages","abortController","AbortController","newUser","info","first_name","last_name","email","password","fetch","method","headers","body","JSON","stringify","then","r","json","data","console","log","getUser","res","parseInt","localStorage","setItem","setState","logout","successLogin","revertSuccess","getMessages","user_messages","filter","message","receiver_id","sendMessage","sender_id","title","message_date","showSpecs","tailor","resetSpecs","componentDidMount","parse","getItem","d","render","props","xprops"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Welcome from './components/Welcome'\nimport Search from './components/Search'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Inbox from './components/Inbox'\nimport Header from './components/Header'\nimport DisplaySearch from './containers/DisplaySearch'\nimport TailorSpecs from './components/TailorSpecs'\nimport DisplayTailorSpecs from './containers/DisplayTailorSpecs'\nimport DisplayInbox from './containers/DisplayInbox'\n\nclass App extends Component {\n  state = {\n    user: null,\n    user_id: null,\n    token: null,\n    error: null,\n    tailors: [],\n    success: false,\n    page: 'Welcome',\n    specs: null,\n    messages: null\n  }\n\n  abortController = new AbortController()\n\n  // Whenever app is re-rendered, we will be...\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user'))\n    if (localStorage.token){\n      this.setState({\n        token: localStorage.token,\n        user_id: localStorage.user_id,\n        user\n      })\n      fetch('http://localhost:3000/users')\n      .then(r => r.json())\n      .then(data => {\n        let tailors = data.filter(d => {\n          return d.tailor === true\n        })\n        this.setState({tailors})\n      })\n      this.getMessages(this.state.user)\n    }\n  }\n\n  // When we want to register a new user\n  newUser = info => {\n    let first_name = info.first_name\n    let last_name = info.last_name\n    let email = info.email\n    let password = info.password\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ first_name, last_name, email, password })\n    })\n    .then(r => r.json())\n    .then(data => console.log(\"data\", data))\n  }\n\n  // When we have a returning user\n  getUser = info => {\n    let email = info.email\n    let password = info.password\n    return fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({ email, password })\n    })\n    .then(r => r.json())\n    .then(res => {\n      console.log(\"res?: \", res)\n      let token = res.token\n      let user_id = parseInt(res.user_id)\n      localStorage.token = token\n      localStorage.user_id = user_id\n      fetch(`http://localhost:3000/users/${res.user_id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': token\n        }\n      })\n      .then(r => r.json())\n      .then(user => {\n        console.log(user, \"userrrrr\")\n        localStorage.setItem('user', JSON.stringify(user))\n        this.setState({user, user_id, token})\n      })\n    })\n  }\n\n  // When a user logs out\n  logout = () => {\n    console.log(\"logged out\")\n    localStorage.token = null\n    localStorage.user_id = null\n    localStorage.user = null\n    this.setState({\n      token: null,\n      user_id: '',\n      user: null,\n      error: null\n    })\n  }\n\n  successLogin = () => {\n    this.setState({success: true})\n  }\n\n  revertSuccess = () => {\n    this.setState({success: false})\n  }\n\n  getMessages = (user) => {\n    fetch('http://localhost:3000/messages')\n    .then(r => r.json())\n    .then(messages => {\n      console.log(\"messages\", messages)\n      console.log(\"user\", user)\n      console.log(\"user_id\", this.state.user_id)\n      let user_messages = messages.filter(message => {\n        return message.receiver_id === this.state.user_id\n      })\n      console.log(\"user messages in app\", user_messages)\n      // return user_messages\n      this.setState({messages: user_messages})\n    })\n  }\n\n  sendMessage = (message) => {\n    console.log(\"message?\", message)\n    let sender_id = this.state.user_id\n    let receiver_id = message.receiver_id\n    let title = message.title\n    let body = message.body\n    let message_date = message.message_date\n    fetch('http://localhost:3000/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({sender_id, receiver_id, title, body, message_date})\n    })\n    .then(r => r.json())\n    .then(res => console.log(res, \"res\"))\n  }\n\n  showSpecs = (tailor) => {\n    this.setState({\n      specs: tailor\n    })\n  }\n\n  resetSpecs = () => {\n    this.setState({\n      specs: null\n    })\n  }\n\n  render() {\n    console.log(\"user in state?\", this.state.user)\n    return (\n      <>\n      <Switch>\n        <Route exact path='/' render={ (props) => <Welcome logout={ this.logout } user={ this.state.user } /> } />\n        <Route path='/search' render={ (xprops) => <DisplaySearch xprops={xprops} user={ this.state.user } tailors={ this.state.tailors } success={ this.state.success } revert={ this.revertSuccess } resetSpecs={this.resetSpecs} specs={this.state.specs} showSpecs={this.showSpecs} /> } />\n        <Route path='/login' render={ (props) => <Login getUser={ this.getUser } success={this.successLogin} /> } />\n        <Route path='/signup' render={ (xprops) => <Signup xprops={xprops} newUser={ this.newUser } /> } />\n        <Route path='/inbox' render={ (xprops) => <DisplayInbox xprops={xprops} user={ this.state.user } messages={ this.state.messages } sendMessage={ this.sendMessage } /> } />\n        <Route path='/tailor' render={ (xprops) => <DisplayTailorSpecs xprops={xprops} resetSpecs={this.resetSpecs} specs={this.state.specs} showSpecs={this.showSpecs} /> } />\n      </Switch>\n\n      { this.state.success ?\n        <Redirect to='/search' />\n        :\n        null\n      }\n\n      { this.state.specs ?\n        <Redirect to='tailor' />\n        :\n        null\n      }\n\n      </>\n    )\n  }\n}\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}